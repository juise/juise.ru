" Interface: {{{

" Disable back compatible with vi
set nocompatible

" Enable syntax highlighting
syntax on
" Set numer of colors for terminal
if !has('gui_running')
	set t_Co=256
endif

" Colorscheme
colorscheme default

" Use ',' as mapleader
let mapleader = ","
let g:mapleader = ","

" Show some useful whitespaces (such as tabs and trailing spaces)
set list
set listchars=tab:»\ ,trail:·,nbsp:%,extends:>,precedes:<

set scrolloff=0
" The minimal number of columns to scroll horizontally.
set sidescroll=5
" The minimal number of screen columns to keep to the left and to the
" right of the cursor if 'nowrap' is set.
set sidescrolloff=5

" Use menu to show command-line completion (in 'full' case)
set wildmenu
" Set command-line completion mode:
"   - on first <Tab>, when more than one match, list all matches and complete
"     the longest common string
"   - on second <Tab>, complete the next full match and show menu
set wildmode=list:longest,full

" Show line, column number, and relative position within a file
set ruler
" Show commands (or size of selection in Visual mode)
set showcmd

" Show line numbers and set width of number zone to 4 symbols
set numberwidth=4
set number

" Do not redraw screen during macros run
set lazyredraw
" Improve redrawing for fast terminal connection
set ttyfast

" Hide the mouse when typing text
set mousehide

" Keep cursor on same column when moving
set nostartofline

" When split windows, put new windows right and below
set splitbelow splitright

" }}}


" Searching: {{{

" Enable incremental search
set incsearch
" Highlight results of a search
set hlsearch
" Be case sensitive only when search contains uppercase
set ignorecase smartcase

" }}}



" Editing: {{{

" Smart tab key behaviour
set smarttab
" Size of autoindent step in spaces
set shiftwidth=4
" Round indent to a multiple of shiftwidth
set shiftround
" Size of tab in spaces
set tabstop=4
" Change tab to 4 space
set expandtab
" Use 4 column for 1 tab
set softtabstop=4

" Enable automatic C program indenting
set cindent

" Encoding
set fileencodings=utf-8,cp1251,koi8-r,cp866
set encoding=utf-8

" Clear trailing whitespaces
nmap <Leader>. :call ClearTrailingWhitespace()<CR>
" Clear ^M from dos fileformat and replace with \r
nmap <Leader>m :%s/\r\(\n\)/\1/g<CR>

" Create backups
set backup
set backupdir=~/vim/backup

" }}}


" Commands: {{{

" Write file using sudo
cmap ws w !sudo cat > %<CR>

" }}}


" Functions: {{{

function! ClearTrailingWhitespace()
	%s/\s\+$//
endfunction

" }}}

" Python: {{{

autocmd BufRead,BufNewFile *.py syntax on
autocmd BufRead,BufNewFile *.py set ai
autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,with,try,except,finally,def,class

" }}}

